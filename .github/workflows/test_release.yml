name: test_release
on:
  # 手动触发
  workflow_dispatch:
  # 定时触发 (例如每天凌晨 1 点触发)
#  schedule:
#    - cron: '0 1 * * *'  # 每天凌晨 1 点 UTC，按需求调整时间

jobs:
  Get_config_Building:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        #version: version: [immortalwrt, openwrt, lede, lienol]
        version: [lienol]
        #branch: [openwrt-24.10, openwrt-23.10]  # 默认分支
        branch: [openwrt-24.10]
        # 如果 version 为 lede，默认分支将是 main，稍后调整
        platform: [x86_64]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create a test file in ./artifacts
        run: |
          mkdir -p ./artifacts  # 确保文件夹存在
          touch ./artifacts/test  # 创建 test 文件
          echo "This is a test file" > ./artifacts/test  # 向文件中写入一些内容
          
  Release:
    needs: Get_config_Building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Download artifacts
        uses: actions/download-artifact@main
        with:
          path: ./artifacts/
          
      - name: Unzip all artifact files
        run: |
          # 解压 ./artifacts/ 目录及其子目录中的所有 .zip 文件
          shopt -s globstar  # 开启 globstar 以支持 ** 递归匹配
          for zip_file in ./artifacts/**/*.zip; do
            if [[ -f "$zip_file" ]]; then
              echo "Unzipping $zip_file..."
              unzip "$zip_file" -d ./artifacts/  # 解压到 ./artifacts/ 目录
              rm "$zip_file"  # 删除 .zip 文件
            fi
          done
          
      - name: Create Git tag
        if: false  # 跳过该步骤
        id: create_tag
        run: |
          # 设置标签名
          TAG_NAME="发布时间(UTC+8)：$(TZ="Asia/Shanghai" date +'%Y.%m.%d-%H_%M')"
          RELEASE_NAME="发布时间(UTC+8)：$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M')"
          
          # 输出标签名和发布名
          echo "TAG_NAME=${TAG_NAME}"
          echo "RELEASE_NAME=${RELEASE_NAME}"

          # 将标签名和发布名传递给后续步骤
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
          
          # 配置 Git 用户
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # 创建标签
          git tag $TAG_NAME

          # 推送标签到远程仓库
          git push origin $TAG_NAME
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} $TAG_NAME          

      - name: Set up GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: $(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          name: 发布时间(UTC+8)：$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M')
          files: ./artifacts/**/*  # 递归匹配所有文件
          body: "Release with multiple builds"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
             

