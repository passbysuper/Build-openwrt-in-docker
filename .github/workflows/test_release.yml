
name: Build OpenWRT In Dcoker

on:
  # 手动触发
  workflow_dispatch:
    inputs:
  # 定时触发 (例如每天凌晨 1 点触发)
#  schedule:
#    - cron: '0 1 * * *'  # 每天凌晨 1 点 UTC，按需求调整时间

jobs:
  Get_config_Building:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        version: [openwrt]
        #version: [lienol]
        #branch: [openwrt-24.10, openwrt-23.10]  # 默认分支
        branch: [openwrt-24.10]
        # 如果 version 为 lede，默认分支将是 main，稍后调整
        platform: [x86_64]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
                
      - name: SSH远程连接（点击 "Web shell:" 链接后键入"q"方才显示终端；进入终端后执行："./mv"，所有设置完成后，键入“exit”退出）
        if: ${{ github.event.inputs.run_ssh == 'true' }}  # 只有 run_ssh 为 true 时执行
        uses: mxschmitt/action-tmate@v3

      - name: Commit and push files to the repository
        if: ${{ github.event.inputs.run_ssh == 'true' }}  # 只有 run_ssh 为 true 时执行
        continue-on-error: true  # 设置即使该步骤失败，依然继续执行后续步骤
        run: |
          # 创建目标目录
          
          mkdir -p ./${{ matrix.version }}/${{ env.branch }}/${{ matrix.platform }}

          echo "test" > ./target/diffconfig.bak

          # 仅复制 /target/ 中的内容到目标目录
          cp -r ./target/* ./${{ matrix.version }}/${{ env.branch }}/${{ matrix.platform }}/

          # 配置 Git 用户
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # 进入仓库的根目录，并确保目标路径下的文件被添加到 Git
          git add ./${{ matrix.version }}/${{ env.branch }}/${{ matrix.platform }}/*

          # 提交更改
          git commit -m "Add build artifacts"

          git pull --rebase origin ${{ github.ref }}

          # 推送到远程仓库
          git push origin ${{ github.ref }}


